//建立本機帳號
git config --list					//顯示本主機使用者
git config --global user.email "as755033@gmail.com"	//創建使用者帳號
git config --global user.name "chen-xin-zai"		//創建使用者名稱
git config --global --edit

//基本指令
cd				//前往路徑
mkdir				//建立資料夾
touch				//建立檔案

//建立git
git init			//在本地建立git版本控制
git clone+網址			//複製遠端數據庫資料
git remote add origin +網址	//上傳已存在master
git push -u origin master	//上傳已存在master

git add .			//新增索引
git reset HEAD			//刪除所有索引
git reset HEAD +檔名		//刪除單一索引
git status			//查詢索引
git commit -m '修改紀錄'	//上傳索引
git push			//上傳遠端
git log				//查詢更新紀錄

//還原檔案
git checkout+檔名		//還原git最新版本上單一檔案的紀錄(未加入索引時)
git reset --hard		//全部還原到最新版本上的紀錄

git reset --hard HEAD^		//刪除最近一次 commit 
git reset --soft HEAD^	 	//刪除最近一次 commit，但保留異動內容
git reset --hard ORIG_HEAD	//上面語法如果刪除錯了可以再用此語法還原
git commit --amend		//commit 後發現有幾個檔案忘了加入進去，想要補內容進去時

//忽略檔案
.gitignore

//分支
git branch			//顯示所有本地分支
git branch 分支名稱		//新增分支
git branch -d 分支名稱		//刪除分支
git checkout +4碼		//觀看以前版本
git checkout master		//回到現在版本
git checkout 分支名稱		//切換分支
git merge 分支名稱		//合併指定分支到目前的分支

//標籤
git tag				//查詢標籤
git tag -n			//查詢詳細標籤
git tag -d 標籤名稱 		//刪除標籤
git tag 標籤名稱 		//新增輕量標籤
git tag -am "備註內容"+標籤名稱 //新增標示標籤

暫存
git stash			//暫時儲存當前目錄
git stash list 			//瀏覽 stash 列表
git stash pop			//還原暫存
git stash drop			//清除最新暫存
git stash clear			//清除全部暫存

遠端數據庫操作

git clone 遠端數據庫網址	//複製遠端數據庫
git remote			//查詢遠端數據庫
git remote rename		//查詢遠端數據庫
git push 遠端數據庫名稱 遠端分支名稱		//將本地分支推送到遠端分支
git pull			//將遠端分支拉下來與本地分支進行合併

